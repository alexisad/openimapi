{
  "openapi": "3.0.0",
  "info": {
    "description": "The `config` service provides basic catalog management operations. It manages all platform resources needed for different kinds of catalogs and operations on these resources.",
    "version": "1.1.2",
    "title": "Config API v1",
    "x-olp-service": {
      "name": "config",
      "version": "v1"
    }
  },
  "servers": [
    {
      "url": "https://use.apilookup.for.a.base.url/config/v1"
    }
  ],
  "security": [
    {
      "Bearer": []
    }
  ],
  "tags": [
    {
      "name": "config",
      "description": "Manage catalogs and layers"
    }
  ],
  "paths": {
    "/catalogs": {
      "get": {
        "tags": [
          "config"
        ],
        "summary": "Gets a list of all catalogs",
        "description": "Lists all catalogs that your account has access to. To get access to a catalog, your administrator must associate this catalog to your HERE platform account. By default, the list provides summary data for each catalog such as the title, configuration URL and resource type.",
        "operationId": "getCatalogs",
        "parameters": [
          {
            "name": "billingTag",
            "in": "query",
            "description": "Optional free-form tag to group together billing records. If supplied, it must be between 4 - 16 characters, contain only alphanumeric ASCII characters [A-Za-z0-9].",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "verbose",
            "in": "query",
            "description": "Indicates if the response should contain fully expanded catalog configurations",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "Works only when the verbose flag is set to true. The result contains only items that have the given string as a part of the value of one or more searchable fields (substring compare). Specify this parameter to search the following catalog details fields: id, name, summary, description, tags and layer details: id, name, summary, description, tags, schema-hrn",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organisation",
            "in": "query",
            "description": "Works only when the verbose flag is set to true. Filters only catalogs (layers) belonging to specified organisation. Only filters by catalog (layer) owner organisation ID. With organization not specified, the default behavior is to search for all.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organisationType",
            "in": "query",
            "description": "Works only when the verbose flag is set to true. Filters only catalogs belonging to organisation. Set 'myOrganisation' to search for catalogs (layers) with the same owner organisation ID like the requester. Set 'here' to search for catalogs (layers) with owner organisation ID equal to the HERE organisation. Set 'other' to search for catalogs (layers) with owner organisation ID not equal to requester organisation and not equal to HERE organisation. With organisationType not specified, the default behaviour is to search for all.",
            "required": false,
            "schema": {
              "type": "array",
              "format": "csv",
              "example": "myOrganisation,here,other",
              "items": {
                "type": "string",
                "enum": [
                  "myOrganisation",
                  "here",
                  "other"
                ]
              }
            },
            "style": "form"
          },
          {
            "name": "layerType",
            "in": "query",
            "description": "Works only when the verbose flag is set to true. Comma-separated list of layer types (with OR semantic) to look for in the layer type. Filters only catalogs that contain layer with layer type presented in given list. With layerType not specified, the default behavior is to search for all.",
            "required": false,
            "schema": {
              "type": "array",
              "format": "csv",
              "example": "versioned,stream,volatile",
              "items": {
                "type": "string",
                "enum": [
                  "versioned",
                  "stream",
                  "volatile"
                ]
              }
            },
            "style": "form"
          },
          {
            "name": "region",
            "in": "query",
            "description": "Works only when the verbose flag is set to true. Comma-separated list of regions (with OR semantic) to look for in the catalog replication configuration. Filters only catalogs that contain region presented in given list. With region not specified, the default behavior is to search for all.",
            "required": false,
            "schema": {
              "type": "array",
              "format": "csv",
              "example": "eu-ireland,us-oregon,cn-ningxia",
              "items": {
                "type": "string",
                "enum": [
                  "eu-ireland",
                  "us-oregon",
                  "cn-ningxia"
                ]
              }
            },
            "style": "form"
          },
          {
            "name": "schemaHrn",
            "in": "query",
            "description": "Works only when the verbose flag is set to true. Filters only catalogs (layers) by the specified layer schema HRN. Filters only on layer schema. With schema not specified, the default behavior is to search for all.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceType",
            "in": "query",
            "description": "Works only when the verbose flag is set to true. Specifies the behavior of other filters. Set 'catalog' to apply other filters to search catalogs (and layers inside). Set 'layer' to apply other filters to search layers. Returned json structure is the same for both cases (list of catalogs with list of layers inside each catalog).",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "catalog",
                "layer"
              ],
              "default": "catalog"
            }
          },
          {
            "name": "coverage",
            "in": "query",
            "description": "Works only when the verbose flag is set to true. Comma-separated list of countries (with OR semantic) to look for in the catalog (layer) coverage. Only catalogs (layers) covering specified countries will be returned. This field is treated case-insensitive. With coverage not specified, the default behavior is to include all countries.",
            "required": false,
            "schema": {
              "type": "array",
              "format": "csv",
              "items": {
                "type": "string"
              }
            },
            "style": "form"
          },
          {
            "name": "access",
            "in": "query",
            "description": "Works only when the verbose flag is set to true. Comma-separated list of access types (with OR semantic) to filter results. Set 'default' to return catalogs the given user has read or manage access to. Set 'create' to return catalogs that the given user has created and that match the owner.creator field, If 'manage', returns catalogs user have have manage access to. Set 'orgAdmin' to return catalogs OrgAdmin users have access to.",
            "required": false,
            "schema": {
              "type": "array",
              "format": "csv",
              "example": "default,create,manage,orgAdmin",
              "items": {
                "type": "string",
                "enum": [
                  "default",
                  "create",
                  "manage",
                  "orgAdmin"
                ]
              }
            },
            "style": "form"
          },
          {
            "name": "marketplaceReady",
            "in": "query",
            "description": "Indicates if the response should contain only Marketplace-ready catalogs. If this flag is set to true, the service will return only catalogs with the marketplaceReady element set to true.",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Works only when the verbose flag is set to true. When provided, the result element count will be limited to this value. Minimum: 1",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Works only when the verbose flag is set to true. Specifies sort field. Set 'name' to sort catalogs by catalog name. Set 'created' to sorts catalogs by catalog create time. Layers inside a catalog are always sorted by layer name. With sortBy non specified, the default behavior is to sort by 'name'",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "name",
                "created"
              ],
              "default": "name"
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Works only when the verbose flag is set to true. Specifies sort order. Set 'asc' to sort in ascending order. Set 'desc' to sort in descending order. The default value is 'asc'.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "asc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/CatalogsListResult"
                    },
                    {
                      "$ref": "#/components/schemas/CatalogsSummaryListResult"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "verbose",
                    "mapping": {
                      "true": "#/components/schemas/CatalogsListResult",
                      "false": "#/components/schemas/CatalogsSummaryListResult"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "x-olp-access-type": "service"
        }
      },
      "post": {
        "tags": [
          "config"
        ],
        "summary": "Creates a catalog",
        "description": "Creates a new catalog with the specified layers. The create catalog operation runs asynchronously. To receive a randomly generated token that you can use to monitor the status of the operation, first  submit the catalog for creation.",
        "operationId": "createCatalog",
        "parameters": [
          {
            "name": "billingTag",
            "in": "query",
            "description": "Optional free-form tag to group together billing records. If supplied, it must be between 4 - 16 characters, contain only alphanumeric ASCII characters [A-Za-z0-9].",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "A catalog object that contains metadata and layer definitions.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCatalog"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted - your request has been received and it is being processed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusLink"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - indicates that request failed fast validation, for example syntax or logical errors"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "Conflict - indicates that a catalog with the same catalog ID already exists or is in the process of being created."
          }
        },
        "x-olp-access-type": "service"
      }
    },
    "/catalogs/{catalogHrn}": {
      "get": {
        "tags": [
          "config"
        ],
        "summary": "Gets the details of a catalog",
        "description": "Gets the full catalog configuration for the requested catalog. The catalog configuration contains descriptive and structural information such as layer definitions and layer types.",
        "operationId": "getCatalog",
        "parameters": [
          {
            "name": "catalogHrn",
            "in": "path",
            "description": "The HERE Resource Name (HRN) of the catalog.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "billingTag",
            "in": "query",
            "description": "Optional free-form tag to group together billing records. If supplied, it must be between 4 - 16 characters, contain only alphanumeric ASCII characters [A-Za-z0-9].",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Catalog"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - A catalog with the specified HRN does not exist or access to this catalog is forbidden."
          }
        },
        "x-olp-access-type": "service"
      },
      "head": {
        "tags": [
          "config"
        ],
        "summary": "Checks the existence of a catalog",
        "description": "Checks whether a catalog with the specified HRN exists.",
        "operationId": "catalogExists",
        "parameters": [
          {
            "name": "catalogHrn",
            "in": "path",
            "description": "The HERE Resource Name (HRN) of the catalog.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "billingTag",
            "in": "query",
            "description": "Billing Tag is an optional free-form tag which is used for grouping billing records together. If supplied, it must be between 4 - 16 characters, contain only alphanumeric ASCII characters [A-Za-z0-9].",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - catalog exists"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found - catalog with the specified HRN does not exist."
          }
        },
        "x-olp-access-type": "service"
      },
      "put": {
        "tags": [
          "config"
        ],
        "summary": "Updates a catalog",
        "description": "Updates any descriptive and structural information in the catalog. To update a catalog, send a new version of your catalog configuration with the updated data and any required fields.",
        "operationId": "updateCatalog",
        "parameters": [
          {
            "name": "catalogHrn",
            "in": "path",
            "description": "The HERE Resource Name (HRN) of the catalog.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "billingTag",
            "in": "query",
            "description": "Optional free-form tag to group together billing records. If supplied, it must be between 4 - 16 characters, contain only alphanumeric ASCII characters [A-Za-z0-9].",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "A catalog object that contains metadata and layer definitions.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCatalog"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted - your request has been received and it is being processed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusLink"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - indicates that your request failed due to fast validation, for example syntax or logical errors."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - A catalog with the specified HRN doesn't exist or access to this catalog is forbidden."
          },
          "409": {
            "description": "Conflict - The catalog with the specified HRN is in the process of being updated."
          }
        },
        "x-olp-access-type": "service"
      },
      "patch": {
        "tags": [
          "config"
        ],
        "summary": "Modify a catalog",
        "description": "Modify some fields of the catalog. The existing HTTP PUT method only allows a complete replacement of a catalog configuration, HTTP PATCH method is used to modify some fields of existing catalog configuration. All fields are optional. Specify field value to modify it, not specified fields are ignored. To remove field value use null value (for more information see RFC 7396 - JSON Merge Patch).",
        "operationId": "patchCatalog",
        "parameters": [
          {
            "name": "catalogHrn",
            "in": "path",
            "description": "The HERE Resource Name (HRN) of the catalog.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "A catalog object that contains modification of catalog configuration.",
          "required": true,
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PatchCatalog"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted - your request was received and it's being processed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusLink"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - indicates that your request failed due to fast validation, for example syntax or logical errors"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Access to this catalog is forbidden"
          },
          "404": {
            "description": "Not Found - A catalog with the specified HRN doesn't exist"
          },
          "409": {
            "description": "Conflict - The catalog with the specified HRN is in the process of being updated."
          }
        },
        "x-olp-access-type": "service"
      },
      "delete": {
        "tags": [
          "config"
        ],
        "summary": "Deletes a catalog",
        "description": "Deletes a catalog and any layers within that catalog.",
        "operationId": "deleteCatalog",
        "parameters": [
          {
            "name": "catalogHrn",
            "in": "path",
            "description": "The HERE Resource Name (HRN) of the catalog.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "billingTag",
            "in": "query",
            "description": "Optional free-form tag to group together billing records. If supplied, it must be between 4 - 16 characters, contain only alphanumeric ASCII characters [A-Za-z0-9].",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted - your request was received and it's being processed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusLink"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - A catalog with the specified HRN doesn't exist or access to this catalog is forbidden."
          },
          "409": {
            "description": "Conflict - The catalog with the specified HRN is in the process of being deleted."
          }
        },
        "x-olp-access-type": "service"
      }
    },
    "/catalogs/{catalogHrn}/layers/{layerId}": {
      "patch": {
        "tags": [
          "config"
        ],
        "summary": "Modify a catalog layer",
        "description": "Modify some fields of the catalog layer. HTTP PATCH method is used to modify some fields of existing layer configuration. All fields are optional. Specify field value to modify it, not specified fields are ignored. To remove field value use null value (for more information see RFC 7396 - JSON Merge Patch).",
        "operationId": "patchLayer",
        "parameters": [
          {
            "name": "catalogHrn",
            "in": "path",
            "description": "The HERE Resource Name (HRN) of the catalog.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "layerId",
            "in": "path",
            "description": "The layer ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "A layer object that contains modification of layer configuration.",
          "required": true,
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PatchLayer"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted - your request was received and it's being processed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusLink"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - indicates that your request failed due to fast validation, for example syntax or logical errors."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Access to this catalog or layer is forbidden."
          },
          "404": {
            "description": "Not Found - A catalog with the specified HRN doesn't exist."
          },
          "409": {
            "description": "Conflict - The catalog with the specified HRN is in the process of being updated."
          }
        },
        "x-olp-access-type": "service"
      },
      "delete": {
        "tags": [
          "config"
        ],
        "summary": "Delete a layer",
        "description": "Delete a layer of the catalog, if it's of layerType 'index', 'volatile' or 'stream'. Other layerTypes are currently not supported.",
        "operationId": "deleteLayer",
        "parameters": [
          {
            "name": "catalogHrn",
            "in": "path",
            "description": "The HERE Resource Name (HRN) of the catalog.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "layerId",
            "in": "path",
            "description": "The layer ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted - your request was received and it's being processed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusLink"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - indicates that your request failed due to fast validation, for example syntax or logical errors."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Access to this catalog or layer is forbidden."
          },
          "404": {
            "description": "Not Found - A catalog with the specified HRN doesn't exist."
          },
          "409": {
            "description": "Conflict - The catalog with the specified HRN is in the process of being updated."
          }
        },
        "x-olp-access-type": "service"
      }
    },
    "/status/{token}": {
      "get": {
        "tags": [
          "config"
        ],
        "summary": "Gets the status of a create, update or delete catalog request",
        "description": "Takes the randomly generated token that you receive when you submit a catalog for creation. You can use this token to monitor the status of your request.",
        "operationId": "getCatalogStatus",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "The token of catalog creation, modification, or deletion task.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "billingTag",
            "in": "query",
            "description": "Optional free-form tag to group together billing records. If supplied, it must be between 4 - 16 characters, contain only alphanumeric ASCII characters [A-Za-z0-9].",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Pending - the catalog operation associated with the provided token is still pending.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogPendingStatus"
                }
              }
            }
          },
          "303": {
            "description": "Operation completed successfully",
            "headers": {
              "Location": {
                "description": "Location of the catalog associated with the provided operation token.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogSuccessStatus"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found - no action is associated with the provided token. "
          },
          "410": {
            "description": "Failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogFailureStatus"
                }
              }
            }
          }
        },
        "x-olp-access-type": "service"
      }
    }
  },
  "components": {
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "CatalogsListResult": {
        "type": "object",
        "properties": {
          "results": {
            "$ref": "#/components/schemas/CatalogsList"
          }
        },
        "description": "Contains a list of catalogs the user has access to."
      },
      "CatalogsList": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Catalog"
            }
          }
        },
        "description": "List of the catalog configurations."
      },
      "CatalogsSummaryListResult": {
        "type": "object",
        "properties": {
          "results": {
            "$ref": "#/components/schemas/CatalogsSummaryList"
          }
        },
        "description": "Contains a list of catalog summaries the user has access to."
      },
      "CatalogsSummaryList": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CatalogSummary"
            }
          }
        },
        "description": "List of the catalog summaries."
      },
      "CatalogSummary": {
        "type": "object",
        "properties": {
          "href": {
            "type": "string",
            "example": "https://config.data.api.platform.here.com/config/v1/catalogs/hrn:here:data:::olp-traffic",
            "description": "The link to the catalog details."
          },
          "hrn": {
            "type": "string",
            "example": "hrn:here:data:::olp-traffic",
            "description": "The HERE Resource Name (HRN) for the catalog."
          },
          "title": {
            "type": "string",
            "example": "HERE Real Time Traffic",
            "description": "The name of the catalog as specified in the \"name\" property when the catalog was created."
          },
          "type": {
            "type": "string",
            "example": "urn:olp-types:catalog",
            "description": "The type of the href. All hrefs are currently set to urn:olp-types:catalog"
          }
        },
        "description": "Describes the main properties of the catalog."
      },
      "CreateCatalog": {
        "type": "object",
        "required": [
          "id",
          "name",
          "summary",
          "description"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": "olp-traffic",
            "description": "The ID to use when referring to this catalog programmatically. Catalog IDs must be unique across all catalogs in the Open Location Platform. Do not put private information in the catalog ID. The catalog ID forms a portion of the catalog's HERE Resource Name (HRN), and HRNs are visible to other users. Only lowercase alphanumeric characters (a-z), digits (0-9) and dash (-) are allowed in a catalog ID.",
            "minLength": 3,
            "maxLength": 63
          },
          "name": {
            "type": "string",
            "example": "Traffic Data",
            "description": "The short name for the catalog.",
            "minLength": 0,
            "maxLength": 200
          },
          "summary": {
            "type": "string",
            "example": "This catalog provides traffic flow and incidents information.",
            "description": "A one-sentence summary of the catalog. You can see this summary when you browse a list of catalogs on the platform portal.",
            "minLength": 0,
            "maxLength": 1000
          },
          "description": {
            "type": "string",
            "example": "The catalog provides aggregated information about traffic incidents, including the type and location of each traffic incident, status, start and end time, and other relevant data. This data is useful to dynamically optimize route calculations. It also provides access to real-time traffic flow data in including information on speed and congestion for specific regions. The catalog also contains additional data such as the geometry of the road segments in relation to the flow.",
            "description": "A detailed description of the catalog and what it contains. This information appears on the 'Overview' tab when you open a catalog in the platform portal.",
            "minLength": 0,
            "maxLength": 10000
          },
          "tags": {
            "type": "array",
            "example": [
              "Traffic",
              "Flow",
              "Speed"
            ],
            "description": "Some keywords that help to find the catalog when searching the platform portal.",
            "items": {
              "type": "string"
            }
          },
          "layers": {
            "type": "array",
            "description": "The layers in the catalog.",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/CreateVersionedLayer"
                },
                {
                  "$ref": "#/components/schemas/CreateVolatileLayer"
                },
                {
                  "$ref": "#/components/schemas/CreateStreamLayer"
                },
                {
                  "$ref": "#/components/schemas/CreateIndexLayer"
                }
              ]
            }
          },
          "version": {
            "type": "integer",
            "format": "int64",
            "example": 1,
            "description": "The version of the catalog configuration. Every change in this number indicates a change in the catalog configuration. Examples of changes in catalog configuration include changing catalog parameters and adding layers. Note that the catalog configuration version is not the same as the metadata/data version. Configuration and metadata versions are independent of each other and indicate different kinds of changes."
          },
          "notifications": {
            "$ref": "#/components/schemas/Notifications"
          },
          "replication": {
            "$ref": "#/components/schemas/Replication"
          }
        },
        "description": "Describes the configuration of the catalog including its layer definitions."
      },
      "PatchCatalog": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Modified catalog name",
            "description": "The short name for the catalog. Field is optional, specify value to modify catalog name. This field is not removable, null value is not allowed",
            "minLength": 0,
            "maxLength": 200
          },
          "summary": {
            "type": "string",
            "example": "Modified catalog summary",
            "description": "A one-sentence summary of the catalog. You can see this summary when you browse a list of catalogs on the platform portal. Field is optional, specify value to modify catalog summary. This field is not removable, null value is not allowed",
            "minLength": 0,
            "maxLength": 1000
          },
          "description": {
            "type": "string",
            "example": "Modified catalog description",
            "description": "A detailed description of the catalog and what it contains. This information appears on the 'Overview' tab when you open a catalog in the platform portal. Field is optional, specify value to modify catalog description. This field is not removable, null value is not allowed",
            "minLength": 0,
            "maxLength": 10000
          },
          "tags": {
            "type": "array",
            "example": [
              "Traffic",
              "Speed"
            ],
            "description": "Some keywords that help to find the catalog when searching in the platform portal. Field is optional, specify value to replace all list of tags. This field is not removable, null value is not allowed",
            "items": {
              "type": "string"
            }
          },
          "notifications": {
            "description": "If set to true, then a notification is written to the notification stream each time the version of the catalog changes. Field is optional, specify value to modify notifications. This field is not removable, null value is not allowed",
            "$ref": "#/components/schemas/Notifications"
          },
          "replication": {
            "$ref": "#/components/schemas/Replication"
          }
        },
        "description": "Describes the modification of the catalog configuration."
      },
      "CreateVersionedLayer": {
        "type": "object",
        "required": [
          "id",
          "name",
          "summary",
          "description",
          "contentType",
          "tags",
          "billingTags",
          "layerType"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/LayerId"
          },
          "name": {
            "$ref": "#/components/schemas/LayerName"
          },
          "summary": {
            "$ref": "#/components/schemas/LayerSummary"
          },
          "description": {
            "$ref": "#/components/schemas/LayerDescription"
          },
          "coverage": {
            "$ref": "#/components/schemas/Coverage"
          },
          "schema": {
            "$ref": "#/components/schemas/Schema"
          },
          "partitioningScheme": {
            "$ref": "#/components/schemas/DeprecatedPartitioningScheme"
          },
          "partitioning": {
            "$ref": "#/components/schemas/Partitioning"
          },
          "contentType": {
            "$ref": "#/components/schemas/ContentType"
          },
          "contentEncoding": {
            "$ref": "#/components/schemas/ContentEncoding"
          },
          "tags": {
            "$ref": "#/components/schemas/Tags"
          },
          "billingTags": {
            "$ref": "#/components/schemas/BillingTags"
          },
          "digest": {
            "$ref": "#/components/schemas/Digest"
          },
          "layerType": {
            "$ref": "#/components/schemas/VersionedLayerType"
          }
        },
        "description": "Describes properties of a catalog versioned layer."
      },
      "CreateVolatileLayer": {
        "type": "object",
        "required": [
          "id",
          "name",
          "summary",
          "description",
          "contentType",
          "tags",
          "billingTags",
          "layerType"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/LayerId"
          },
          "name": {
            "$ref": "#/components/schemas/LayerName"
          },
          "summary": {
            "$ref": "#/components/schemas/LayerSummary"
          },
          "description": {
            "$ref": "#/components/schemas/LayerDescription"
          },
          "coverage": {
            "$ref": "#/components/schemas/Coverage"
          },
          "schema": {
            "$ref": "#/components/schemas/Schema"
          },
          "partitioningScheme": {
            "$ref": "#/components/schemas/DeprecatedPartitioningScheme"
          },
          "partitioning": {
            "$ref": "#/components/schemas/Partitioning"
          },
          "contentType": {
            "$ref": "#/components/schemas/ContentType"
          },
          "contentEncoding": {
            "$ref": "#/components/schemas/ContentEncoding"
          },
          "tags": {
            "$ref": "#/components/schemas/Tags"
          },
          "billingTags": {
            "$ref": "#/components/schemas/BillingTags"
          },
          "ttlHours": {
            "$ref": "#/components/schemas/TtlHours"
          },
          "ttl": {
            "$ref": "#/components/schemas/Ttl"
          },
          "digest": {
            "$ref": "#/components/schemas/Digest"
          },
          "volume": {
            "$ref": "#/components/schemas/VolatileVolume"
          },
          "volatileProperties": {
            "$ref": "#/components/schemas/VolatileProperties"
          },
          "layerType": {
            "$ref": "#/components/schemas/VolatileLayerType"
          }
        },
        "description": "Describes properties of a catalog volatile layer."
      },
      "CreateStreamLayer": {
        "type": "object",
        "required": [
          "id",
          "name",
          "summary",
          "description",
          "contentType",
          "tags",
          "billingTags",
          "layerType"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/LayerId"
          },
          "name": {
            "$ref": "#/components/schemas/LayerName"
          },
          "summary": {
            "$ref": "#/components/schemas/LayerSummary"
          },
          "description": {
            "$ref": "#/components/schemas/LayerDescription"
          },
          "coverage": {
            "$ref": "#/components/schemas/Coverage"
          },
          "schema": {
            "$ref": "#/components/schemas/Schema"
          },
          "partitioningScheme": {
            "$ref": "#/components/schemas/DeprecatedPartitioningScheme"
          },
          "partitioning": {
            "$ref": "#/components/schemas/Partitioning"
          },
          "contentType": {
            "$ref": "#/components/schemas/ContentType"
          },
          "contentEncoding": {
            "$ref": "#/components/schemas/ContentEncoding"
          },
          "tags": {
            "$ref": "#/components/schemas/Tags"
          },
          "billingTags": {
            "$ref": "#/components/schemas/BillingTags"
          },
          "ttlHours": {
            "$ref": "#/components/schemas/TtlHours"
          },
          "ttl": {
            "$ref": "#/components/schemas/Ttl"
          },
          "volume": {
            "$ref": "#/components/schemas/DurableVolume"
          },
          "streamProperties": {
            "$ref": "#/components/schemas/StreamProperties"
          },
          "layerType": {
            "$ref": "#/components/schemas/StreamLayerType"
          }
        },
        "description": "Describes properties of a catalog stream layer."
      },
      "CreateIndexLayer": {
        "type": "object",
        "required": [
          "id",
          "name",
          "summary",
          "description",
          "contentType",
          "tags",
          "billingTags",
          "layerType"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/LayerId"
          },
          "name": {
            "$ref": "#/components/schemas/LayerName"
          },
          "summary": {
            "$ref": "#/components/schemas/LayerSummary"
          },
          "description": {
            "$ref": "#/components/schemas/LayerDescription"
          },
          "coverage": {
            "$ref": "#/components/schemas/Coverage"
          },
          "schema": {
            "$ref": "#/components/schemas/Schema"
          },
          "contentType": {
            "$ref": "#/components/schemas/ContentType"
          },
          "contentEncoding": {
            "$ref": "#/components/schemas/ContentEncoding"
          },
          "tags": {
            "$ref": "#/components/schemas/Tags"
          },
          "billingTags": {
            "$ref": "#/components/schemas/BillingTags"
          },
          "indexProperties": {
            "$ref": "#/components/schemas/IndexProperties"
          },
          "digest": {
            "$ref": "#/components/schemas/Digest"
          },
          "layerType": {
            "$ref": "#/components/schemas/IndexLayerType"
          }
        },
        "description": "Describes properties of a catalog index layer."
      },
      "PatchLayer": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Modified layer name",
            "description": "The short name for the layer. Field is optional, specify value to modify layer name. This field is not removable, null value is not allowed",
            "minLength": 0,
            "maxLength": 120
          },
          "summary": {
            "type": "string",
            "example": "Modified layer summary",
            "description": "A one-sentence summary of the layer. You can see this summary when you browse a list of layers on the platform portal. Field is optional, specify value to modify layer summary. This field is not removable, null value is not allowed",
            "minLength": 0,
            "maxLength": 1000
          },
          "description": {
            "type": "string",
            "example": "Modified layer description",
            "description": "A detailed description of the layer and what it contains. This information appears on the 'Overview' tab when you open a layer in the platform portal. Field is optional, specify value to modify layer description. This field is not removable, null value is not allowed",
            "minLength": 0,
            "maxLength": 10000
          },
          "coverage": {
            "description": "The geographic areas that this layer covers, grouped by administrative divisions. Field is optional, specify value to modify layer coverage. This field is not removable, null value is not allowed",
            "$ref": "#/components/schemas/Coverage"
          },
          "schema": {
            "example": "hrn:here:schema:::com.here.schema.rib:topology-geometry_v2:2.2.0",
            "description": "The HRN of the data schema for this layer. Field is optional, specify value to modify layer schema. This field is not removable, null value is not allowed",
            "$ref": "#/components/schemas/Schema"
          },
          "partitioning": {
            "description": "Defines how data is partitioned within the layer. Field is optional, specify value to modify layer partitioning. This field is not removable, null value is not allowed",
            "$ref": "#/components/schemas/Partitioning"
          },
          "tags": {
            "type": "array",
            "example": [
              "Traffic",
              "Speed"
            ],
            "description": "Some keywords that help to find the layer when searching in the platform portal. Field is optional, specify value to replace all list of tags. This field is not removable, null value is not allowed",
            "items": {
              "type": "string"
            }
          },
          "billingTags": {
            "type": "array",
            "example": [
              "Cost Center 1",
              "Cost Center 2"
            ],
            "description": "The list of billing tags, which are a free-form tags to group together billing records. If supplied, it must be between 4 - 16 characters, contain only alphanumeric ASCII characters [A-Za-z0-9]. Field is optional, specify value to replace all list of billing tags. This field is not removable, null value is not allowed.",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Describes the modification of the layer configuration."
      },
      "LayerId": {
        "type": "string",
        "example": "traffic-incidents",
        "description": "The ID to use when referring to this layer programmatically.",
        "minLength": 1,
        "maxLength": 50
      },
      "LayerHrn": {
        "type": "string",
        "example": "hrn:here:data:::olp-traffic:traffic-incidents",
        "description": "The HERE Resource Name (HRN) of the layer."
      },
      "LayerName": {
        "type": "string",
        "example": "Traffic Incidents",
        "description": "The display name for the layer.",
        "minLength": 1,
        "maxLength": 120
      },
      "LayerSummary": {
        "type": "string",
        "example": "This layer provides aggregated information about traffic incidents.",
        "description": "A one-sentence summary of the layer. You can see this summary when you browse a list of layers on the platform portal.",
        "minLength": 0,
        "maxLength": 1000
      },
      "LayerDescription": {
        "type": "string",
        "example": "This layer provides aggregated information about traffic incidents, including the type and location of each traffic incident, status, start and end time, and other relevant data. This data is useful to dynamically optimize route calculations.",
        "description": "A detailed description of the layer and what it contains. This information appears on the 'Overview' tab when you open a layer in the platform portal.",
        "minLength": 0,
        "maxLength": 10000
      },
      "LayerCreated": {
        "type": "string",
        "example": "2019-02-07T15:24:39.437810Z",
        "description": "The layer creation timestamp."
      },
      "VersionedLayerType": {
        "type": "string",
        "example": "versioned",
        "enum": [
          "versioned"
        ],
        "description": "The type of data availability that this layer provides."
      },
      "VolatileLayerType": {
        "type": "string",
        "example": "volatile",
        "enum": [
          "volatile"
        ],
        "description": "The type of data availability that this layer provides."
      },
      "StreamLayerType": {
        "type": "string",
        "example": "stream",
        "enum": [
          "stream"
        ],
        "description": "The type of data availability that this layer provides."
      },
      "IndexLayerType": {
        "type": "string",
        "example": "index",
        "enum": [
          "index"
        ],
        "description": "The type of data availability that this layer provides."
      },
      "Coverage": {
        "type": "object",
        "properties": {
          "adminAreas": {
            "type": "array",
            "description": "A list of ISO 3166 two-letter codes for countries and regions optionally followed by up to three characters codes for subdivisions, such as 'DE', 'PL' or 'CN-HK'.",
            "items": {
              "type": "string",
              "example": "DE"
            }
          }
        },
        "description": "The geographic area that this layer covers."
      },
      "Schema": {
        "type": "object",
        "properties": {
          "hrn": {
            "type": "string",
            "example": "hrn:here:schema:::com.here.schema.rib:topology-geometry_v2:2.2.0"
          }
        },
        "description": "Describes a HRN for the layer schema"
      },
      "PartitioningScheme": {
        "type": "string",
        "enum": [
          "generic",
          "heretile"
        ],
        "example": "heretile",
        "description": "The name of the partitioning scheme for the layer."
      },
      "DeprecatedPartitioningScheme": {
        "type": "string",
        "deprecated": true,
        "enum": [
          "generic",
          "heretile"
        ],
        "example": "heretile",
        "description": "The name of the partitioning scheme for the layer."
      },
      "Partitioning": {
        "type": "object",
        "required": [
          "scheme"
        ],
        "properties": {
          "scheme": {
            "$ref": "#/components/schemas/PartitioningScheme",
            "description": "The name of the partitioning scheme for the layer."
          },
          "tileLevels": {
            "type": "array",
            "description": "A list of quadtree tile levels which contain data partitions. Only used if the partitioningScheme is heretile.",
            "items": {
              "type": "integer",
              "format": "int64",
              "example": 12
            }
          }
        },
        "description": "Describes the way in which data is partitioned within the layer."
      },
      "ContentType": {
        "type": "string",
        "description": "The MIME type of the data is stored in this layer.",
        "example": "application/json"
      },
      "ContentEncoding": {
        "type": "string",
        "example": "gzip",
        "description": "Identifies whether the data is compressed.",
        "enum": [
          "gzip"
        ]
      },
      "Digest": {
        "type": "string",
        "description": "The digest algorithm used to calculate the checksum for the partitions in this layer. If specified, you can assume that all partitions in the layer, at every version, were calculated using this algorithm. Note that it is the responsibility of the data publisher to use this algorithm to calculate partition checksums. OLP does not verify that the specified algorithm was actually used.",
        "example": "SHA-1",
        "enum": [
          "MD5",
          "SHA-1",
          "SHA-256"
        ]
      },
      "Tags": {
        "type": "array",
        "example": [
          "Traffic",
          "Flow",
          "Speed",
          "Real-Time",
          "Current"
        ],
        "description": "Some keywords that help to find the layer when searching in the platform portal.",
        "items": {
          "type": "string"
        }
      },
      "BillingTags": {
        "type": "array",
        "example": [
          "Cost Center 1",
          "Cost Center 2"
        ],
        "description": "The list of billing tags, which are a free-form tags to group together billing records. If supplied, it must be between 4 - 16 characters, contain only alphanumeric ASCII characters [A-Za-z0-9].",
        "items": {
          "type": "string"
        }
      },
      "TtlHours": {
        "type": "integer",
        "deprecated": true,
        "format": "int64",
        "example": 24,
        "description": "The expiry time in hours for data in this layer. Data is automatically removed after the specified time limit has elapsed."
      },
      "Ttl": {
        "type": "integer",
        "format": "int64",
        "example": 3600000,
        "description": "The expiry time in milliseconds for data in this layer. Data is automatically removed after the specified time limit has elapsed. For volatile layers, the TTL value must be between 60000 (1 minute) and 604800000 (7 days). For stream layers, the TTL value must be between 600000 (10 minutes) and 259200000 (72 hours)."
      },
      "DurableVolume": {
        "type": "object",
        "required": [
          "volumeType"
        ],
        "properties": {
          "volumeType": {
            "type": "string",
            "enum": [
              "durable"
            ],
            "example": "durable"
          }
        },
        "description": "Describes a catalog durable volume to be used for storing the layer's data content."
      },
      "VolatileVolume": {
        "type": "object",
        "required": [
          "volumeType"
        ],
        "properties": {
          "volumeType": {
            "type": "string",
            "enum": [
              "volatile"
            ],
            "example": "volatile"
          },
          "maxMemoryPolicy": {
            "type": "string",
            "description": "Define keys eviction policy when the memory limit for volatile layer is reached",
            "enum": [
              "failOnWrite",
              "replaceLessRecentlyUsedKey"
            ],
            "example": "failOnWrite"
          },
          "packageType": {
            "type": "string",
            "description": "Define initial package type (capacity) of the volatile layer",
            "enum": [
              "experimental",
              "small",
              "medium",
              "large"
            ],
            "example": "small"
          }
        },
        "description": "Describes a catalog volatile volume to be used for storing the layer's data content. Specifies volatile properties values if they are not provided."
      },
      "VolatileProperties": {
        "type": "object",
        "required": [
          "storageCapacityMb"
        ],
        "properties": {
          "provisionMode": {
            "type": "string",
            "enum": [
              "single-instance",
              "multi-instance"
            ],
            "example": "volatile",
            "description": "Volatile storage provision mode."
          },
          "storageCapacityMb": {
            "type": "integer",
            "format": "int32",
            "example": 100,
            "description": "Capacity of volatile storage in Mb. Value should be divisible by 100. The minimum is 100, maximum is 21000 Mb."
          }
        },
        "description": "Properties that define the scale of the required volatile service. Volatile properties override volatile volume packageType."
      },
      "StreamProperties": {
        "type": "object",
        "properties": {
          "dataInThroughputMbps": {
            "type": "integer",
            "format": "int64",
            "example": 10,
            "description": "Maximum throughput for incoming data expressed in megabytes per second. Throttling occurs when the inbound rate exceeds the maximum inbound throughput. The default is 4 MBps. The maximum is 32 MBps."
          },
          "dataOutThroughputMbps": {
            "type": "integer",
            "format": "int64",
            "example": 10,
            "description": "Maximum throughput for outgoing data expressed in megabytes per second. Throttling occurs when the total outbound rate to all consumers exceeds the maximum outbound throughput. The default is 8 MBps. The maximum is 64 MBps."
          }
        },
        "description": "Properties that define the scale of the required streaming service."
      },
      "IndexProperties": {
        "type": "object",
        "properties": {
          "ttl": {
            "type": "string",
            "example": "1.year",
            "description": "Amount of time data will remain in index layer. If not specified, it defaults to 7 days",
            "enum": [
              "7.days",
              "15.days",
              "1.month",
              "2.months",
              "3.months",
              "4.months",
              "6.months",
              "1.year",
              "1.5.years",
              "2.year",
              "unlimited"
            ]
          },
          "indexDefinitions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IndexDefinition"
            }
          }
        }
      },
      "IndexDefinition": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "bool",
              "int",
              "string",
              "heretile",
              "timewindow"
            ]
          },
          "duration": {
            "description": "timewindow - represents the time slice (NOT just point in time) and denotes the finest time granularity at which the data will be indexed and later queried. Time type has an attribute duration, which represents the time slice length. It is NOT mutable. Both time key value and time type duration are expressed in milliseconds (time value is milliseconds since Epoch). Value of duration is between 10 minutes and 1 day in millis",
            "type": "integer"
          },
          "zoomLevel": {
            "type": "integer",
            "description": "heretile - represents the tile ID in the HERE tile map tiling scheme. The heretile type has an attribute zoomLevel, which represents the size of the tile and is NOT mutable.",
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14
            ]
          }
        }
      },
      "StatusLink": {
        "type": "object",
        "properties": {
          "href": {
            "type": "string",
            "description": "href of the created/update/delete catalog action",
            "example": "https://config.data.api.platform.here.com/config/v1/status/02bc9a8d-6dc4-4698-87a0-faf3372e81c1"
          },
          "title": {
            "type": "string",
            "description": "Title of the action.",
            "example": "Catalog Creation, Catalog Deletion, Catalog Update"
          },
          "type": {
            "type": "string",
            "description": "Type of the href.",
            "example": "urn:olp-types:status"
          }
        },
        "description": "Describes the status and href of the create/update/delete resource such as a catalog."
      },
      "CatalogFailureStatus": {
        "type": "object",
        "properties": {
          "reason": {
            "type": "string",
            "example": "Operation failed"
          },
          "status": {
            "type": "string",
            "description": "Status of the operation",
            "example": "failure"
          }
        },
        "description": "Describes the detailed status of the failed catalog creation operation."
      },
      "CatalogPendingStatus": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of the operation",
            "example": "pending"
          }
        },
        "description": "Describes the status of the catalog modification action."
      },
      "CatalogSuccessStatus": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/StatusLink"
          },
          "status": {
            "type": "string",
            "description": "Status of the operation",
            "example": "success"
          }
        },
        "description": "Describes the status of the successful catalog creation operation including its href."
      },
      "Catalog": {
        "type": "object",
        "required": [
          "id",
          "hrn",
          "name",
          "summary",
          "description",
          "version",
          "created",
          "tags",
          "replication",
          "layers"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": "olp-traffic",
            "description": "The ID to use when referring to this catalog programmatically. Catalog IDs must be unique across all catalogs in the Open Location Platform. Do not put private information in the catalog ID. The catalog ID forms a portion of the catalog's HERE Resource Name (HRN), and HRNs are visible to other users.",
            "minLength": 3,
            "maxLength": 63
          },
          "hrn": {
            "type": "string",
            "example": "hrn:here:data:::olp-traffic",
            "description": "The HERE Resource Name (HRN) of the catalog."
          },
          "name": {
            "type": "string",
            "example": "Traffic Data",
            "description": "The short name for the catalog.",
            "minLength": 0,
            "maxLength": 200
          },
          "summary": {
            "type": "string",
            "example": "This catalog provides traffic flow and incidents information.",
            "description": "A one-sentence summary of the catalog. You can see this summary when you browse a list of catalogs on the platform portal.",
            "minLength": 0,
            "maxLength": 1000
          },
          "description": {
            "type": "string",
            "example": "The catalog provides aggregated information about traffic incidents, including the type and location of each traffic incident, status, start and end time, and other relevant data. This data is useful to dynamically optimize route calculations. It also provides access to real-time traffic flow data in including information on speed and congestion for specific regions. The catalog also contains additional data such as the geometry of the road segments in relation to the flow.",
            "description": "A detailed description of the catalog and what it contains. This information appears on the 'Overview' tab when you open a catalog in the platform portal.",
            "minLength": 0,
            "maxLength": 10000
          },
          "coverage": {
            "$ref": "#/components/schemas/Coverage"
          },
          "owner": {
            "$ref": "#/components/schemas/Owner"
          },
          "tags": {
            "type": "array",
            "example": [
              "Traffic",
              "Flow",
              "Speed"
            ],
            "description": "Some keywords that help to find the catalog when searching the platform portal.",
            "items": {
              "type": "string"
            }
          },
          "billingTags": {
            "type": "array",
            "example": [
              "Cost Center 1",
              "Cost Center 2"
            ],
            "description": "Aggregated list of all layers` billing tags. Note that this element is read-only and does not exist in CreateCatalog. If posted during catalog creation, the value will be ignored.",
            "items": {
              "type": "string"
            }
          },
          "created": {
            "type": "string",
            "example": "2017-08-04T17:19:03.853Z",
            "description": "The creation date and time."
          },
          "replication": {
            "$ref": "#/components/schemas/Replication"
          },
          "layers": {
            "type": "array",
            "description": "The layers in the catalog.",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/VersionedLayer"
                },
                {
                  "$ref": "#/components/schemas/VolatileLayer"
                },
                {
                  "$ref": "#/components/schemas/StreamLayer"
                },
                {
                  "$ref": "#/components/schemas/IndexLayer"
                }
              ]
            }
          },
          "version": {
            "type": "integer",
            "format": "int64",
            "example": 1,
            "description": "The version of the catalog configuration. Every change in this number indicates a change in the catalog configuration. The version number is incremented every time you, for example, change catalog parameters or add layers. Note that this is not a metadata/data version since configuration and metadata versions are independent of each other and indicate different kinds of changes."
          },
          "notifications": {
            "$ref": "#/components/schemas/Notifications"
          }
        },
        "description": "Describes the catalog properties."
      },
      "Replication": {
        "type": "object",
        "properties": {
          "regions": {
            "type": "array",
            "description": "A list of the catalog's replication regions and each region's role. For multi-region replication, the catalogs list should contain multiple items where at least one should be with a `primary` role. For single region, catalogs should define a `primary` region. Currently, only `eu-ireland` is allowed as a primary region.",
            "items": {
              "$ref": "#/components/schemas/ReplicationRegion"
            }
          }
        }
      },
      "ReplicationRegion": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the region.",
            "enum": [
              "eu-ireland",
              "us-oregon"
            ]
          },
          "role": {
            "description": "Indicates whether the region is a primary or failover region. One of the following: `primary` - The region is used by default for reading and writing. `secondary` - The region is used as a failover region.",
            "type": "string",
            "enum": [
              "primary",
              "secondary"
            ]
          }
        }
      },
      "Owner": {
        "type": "object",
        "properties": {
          "creator": {
            "$ref": "#/components/schemas/Creator"
          },
          "organisation": {
            "$ref": "#/components/schemas/Organisation"
          }
        }
      },
      "Creator": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique ID of the user or application to initially have created the catalog."
          }
        }
      },
      "Organisation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "HERE",
            "description": "The ID of the customer organisation related to this catalog."
          }
        }
      },
      "VersionedLayer": {
        "type": "object",
        "required": [
          "id",
          "hrn",
          "name",
          "summary",
          "description",
          "partitioningScheme",
          "partitioning",
          "contentType",
          "tags",
          "billingTags",
          "volume",
          "created",
          "layerType"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/LayerId"
          },
          "hrn": {
            "$ref": "#/components/schemas/LayerHrn"
          },
          "name": {
            "$ref": "#/components/schemas/LayerName"
          },
          "summary": {
            "$ref": "#/components/schemas/LayerSummary"
          },
          "description": {
            "$ref": "#/components/schemas/LayerDescription"
          },
          "coverage": {
            "$ref": "#/components/schemas/Coverage"
          },
          "schema": {
            "$ref": "#/components/schemas/Schema"
          },
          "partitioningScheme": {
            "$ref": "#/components/schemas/DeprecatedPartitioningScheme"
          },
          "partitioning": {
            "$ref": "#/components/schemas/Partitioning"
          },
          "contentType": {
            "$ref": "#/components/schemas/ContentType"
          },
          "contentEncoding": {
            "$ref": "#/components/schemas/ContentEncoding"
          },
          "tags": {
            "$ref": "#/components/schemas/Tags"
          },
          "billingTags": {
            "$ref": "#/components/schemas/BillingTags"
          },
          "digest": {
            "$ref": "#/components/schemas/Digest"
          },
          "volume": {
            "$ref": "#/components/schemas/DurableVolume"
          },
          "created": {
            "$ref": "#/components/schemas/LayerCreated"
          },
          "layerType": {
            "$ref": "#/components/schemas/VersionedLayerType"
          }
        },
        "description": "Describes the catalog versioned layer properties."
      },
      "VolatileLayer": {
        "type": "object",
        "required": [
          "id",
          "hrn",
          "name",
          "summary",
          "description",
          "partitioningScheme",
          "partitioning",
          "contentType",
          "tags",
          "billingTags",
          "ttlHours",
          "ttl",
          "volume",
          "created",
          "layerType"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/LayerId"
          },
          "hrn": {
            "$ref": "#/components/schemas/LayerHrn"
          },
          "name": {
            "$ref": "#/components/schemas/LayerName"
          },
          "summary": {
            "$ref": "#/components/schemas/LayerSummary"
          },
          "description": {
            "$ref": "#/components/schemas/LayerDescription"
          },
          "coverage": {
            "$ref": "#/components/schemas/Coverage"
          },
          "schema": {
            "$ref": "#/components/schemas/Schema"
          },
          "partitioningScheme": {
            "$ref": "#/components/schemas/DeprecatedPartitioningScheme"
          },
          "partitioning": {
            "$ref": "#/components/schemas/Partitioning"
          },
          "contentType": {
            "$ref": "#/components/schemas/ContentType"
          },
          "contentEncoding": {
            "$ref": "#/components/schemas/ContentEncoding"
          },
          "tags": {
            "$ref": "#/components/schemas/Tags"
          },
          "billingTags": {
            "$ref": "#/components/schemas/BillingTags"
          },
          "ttlHours": {
            "$ref": "#/components/schemas/TtlHours"
          },
          "ttl": {
            "$ref": "#/components/schemas/Ttl"
          },
          "digest": {
            "$ref": "#/components/schemas/Digest"
          },
          "volume": {
            "$ref": "#/components/schemas/VolatileVolume"
          },
          "volatileProperties": {
            "$ref": "#/components/schemas/VolatileProperties"
          },
          "created": {
            "$ref": "#/components/schemas/LayerCreated"
          },
          "layerType": {
            "$ref": "#/components/schemas/VolatileLayerType"
          }
        },
        "description": "Describes the catalog volatile layer properties."
      },
      "StreamLayer": {
        "type": "object",
        "required": [
          "id",
          "hrn",
          "name",
          "summary",
          "description",
          "partitioningScheme",
          "partitioning",
          "contentType",
          "tags",
          "billingTags",
          "ttlHours",
          "ttl",
          "volume",
          "streamProperties",
          "created",
          "layerType"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/LayerId"
          },
          "hrn": {
            "$ref": "#/components/schemas/LayerHrn"
          },
          "name": {
            "$ref": "#/components/schemas/LayerName"
          },
          "summary": {
            "$ref": "#/components/schemas/LayerSummary"
          },
          "description": {
            "$ref": "#/components/schemas/LayerDescription"
          },
          "coverage": {
            "$ref": "#/components/schemas/Coverage"
          },
          "schema": {
            "$ref": "#/components/schemas/Schema"
          },
          "partitioningScheme": {
            "$ref": "#/components/schemas/DeprecatedPartitioningScheme"
          },
          "partitioning": {
            "$ref": "#/components/schemas/Partitioning"
          },
          "contentType": {
            "$ref": "#/components/schemas/ContentType"
          },
          "contentEncoding": {
            "$ref": "#/components/schemas/ContentEncoding"
          },
          "tags": {
            "$ref": "#/components/schemas/Tags"
          },
          "billingTags": {
            "$ref": "#/components/schemas/BillingTags"
          },
          "ttlHours": {
            "$ref": "#/components/schemas/TtlHours"
          },
          "ttl": {
            "$ref": "#/components/schemas/Ttl"
          },
          "volume": {
            "$ref": "#/components/schemas/DurableVolume"
          },
          "streamProperties": {
            "$ref": "#/components/schemas/StreamProperties"
          },
          "created": {
            "$ref": "#/components/schemas/LayerCreated"
          },
          "layerType": {
            "$ref": "#/components/schemas/StreamLayerType"
          }
        },
        "description": "Describes the catalog stream layer properties."
      },
      "IndexLayer": {
        "type": "object",
        "required": [
          "id",
          "hrn",
          "name",
          "summary",
          "description",
          "contentType",
          "tags",
          "billingTags",
          "volume",
          "indexProperties",
          "created",
          "layerType"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/LayerId"
          },
          "hrn": {
            "$ref": "#/components/schemas/LayerHrn"
          },
          "name": {
            "$ref": "#/components/schemas/LayerName"
          },
          "summary": {
            "$ref": "#/components/schemas/LayerSummary"
          },
          "description": {
            "$ref": "#/components/schemas/LayerDescription"
          },
          "coverage": {
            "$ref": "#/components/schemas/Coverage"
          },
          "schema": {
            "$ref": "#/components/schemas/Schema"
          },
          "contentType": {
            "$ref": "#/components/schemas/ContentType"
          },
          "contentEncoding": {
            "$ref": "#/components/schemas/ContentEncoding"
          },
          "tags": {
            "$ref": "#/components/schemas/Tags"
          },
          "billingTags": {
            "$ref": "#/components/schemas/BillingTags"
          },
          "volume": {
            "$ref": "#/components/schemas/DurableVolume"
          },
          "indexProperties": {
            "$ref": "#/components/schemas/IndexProperties"
          },
          "created": {
            "$ref": "#/components/schemas/LayerCreated"
          },
          "digest": {
            "$ref": "#/components/schemas/Digest"
          },
          "layerType": {
            "$ref": "#/components/schemas/IndexLayerType"
          }
        },
        "description": "Describes the catalog index layer properties."
      },
      "Notifications": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "example": false,
            "description": "If set to true, then a notification is written to the notification stream each time the version of the catalog changes."
          }
        }
      },
      "ErrorMessage": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": "E1000",
            "description": "An error code that pertains to a specific error.",
            "readOnly": true
          },
          "errors": {
            "type": "array",
            "description": "A set of validation error messages.",
            "items": {
              "$ref": "#/components/schemas/ValidationErrorMessage"
            }
          },
          "message": {
            "type": "string",
            "example": "The provided catalog ID doesn't exist.",
            "description": "A message that describes the cause of the error.",
            "readOnly": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "example": 400,
            "description": "The HTTP status code of the error response.",
            "readOnly": true
          }
        },
        "description": "An HTTP Error message that the service provides when there is a problem with a request."
      },
      "ValidationErrorMessage": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": "E1000",
            "description": "Error code that pertains to a specific error.",
            "readOnly": true
          },
          "field": {
            "type": "string",
            "example": "/parent/list/1/value",
            "description": "The field of the object that is invalid. The field follows RFC 6901 JSON Pointer (see: https://tools.ietf.org/html/rfc6901). "
          },
          "invalidValue": {
            "type": "object",
            "example": "sample string",
            "description": "The value that is invalid that was sent."
          },
          "message": {
            "type": "string",
            "example": "Validation Failed",
            "description": "This is the message for the error.",
            "readOnly": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "example": 400,
            "description": "Duplicate of the HTTP status that is returned.",
            "readOnly": true
          }
        },
        "description": "HTTP Error message thrown by the service."
      }
    }
  }
}